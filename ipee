#!/bin/bash
#
# IPEE 0.1 20140923 copyright sk4zuzu@gmail.com 2014
#
# This file is part of IPEE.
#
# IPEE is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# IPEE is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with IPEE.  If not, see <http://www.gnu.org/licenses/>.
#

not()    { head -n1|wc -l|tr -dc '0\n'|tr 0 1; }
notnot() { head -n1|wc -l|tr -dc '1\n'|tr 1 0; }

new(){
    u="$1";shift                            # namespace name
    a="$1";shift                            # ip address

    b=`echo ${a}|rev|cut -d. -f2-|rev`.255  # broadcast address
    g=`echo ${a}|rev|cut -d. -f2-|rev`.69   # gateway address
    n=`echo ${a}|rev|cut -d. -f2-|rev`.0/24 # network address

    echo "> create namespace (if needed)"
    ip netns list|grep ${u}|not \
        |xargs -r -i{} ip netns add ${u}

    echo "> create new veth device pair (if needed)"
    ip link list|grep ${u}a|not \
        |xargs -r -i{} ip link add ${u}a type veth peer name ${u}b

    echo "> move the 'b' device to the new namespace (if needed)"
    ip link list|grep ${u}b|notnot \
        |xargs -r -i{} ip link set ${u}b netns ${u}

    echo "> prepare loopback address inside the new namespace (if needed)"
    ip netns exec ${u} \
    ip addr show lo|grep 127.0.0.1/8|not \
        |xargs -r -i{} ip netns exec ${u} \
                       ip addr add 127.0.0.1/8 dev lo

    echo "> prepare 'b' device address inside the new namespace (if needed)"
    ip netns exec ${u} \
    ip addr list|grep -A4 ${u}b:|grep ${a}/24|not \
        |xargs -r -i{} ip netns exec ${u} \
                       ip addr add ${a}/24 brd ${b} dev ${u}b

    echo "> create new bridge (if needed)"
    ip link list|grep br0:|not \
        |xargs -r -i{} ip link add br0 type bridge

    echo "> set ip address on the bridge (if needed)"
    ip addr list|grep -A4 br0:|grep ${g}/24|not \
        |xargs -r -i{} ip addr add ${g}/24 brd ${b} dev br0

    echo "> plug 'a' device into the bridge (if needed)"
    ip link list|grep ${u}:|grep br0|not \
        |xargs -r -i{} ip link set ${u}a master br0

    echo "> bring the bridge up (if exists)"
    ip link list|grep br0:|notnot \
        |xargs -r -i{} ip link set br0 up

    echo "> bring the 'a' device up (if exists)"
    ip link list|grep ${u}a:|notnot \
        |xargs -r -i{} ip link set ${u}a up

    echo "> bring loopback device up inside the new namespace (if exists)"
    ip netns exec ${u} \
    ip link show lo|notnot \
        |xargs -r -i{} ip netns exec ${u} \
                       ip link set lo up

    echo "> bring the 'b' device up inside the new namespace (if exists)"
    ip netns exec ${u} \
    ip link list|grep ${u}b:|notnot \
        |xargs -r -i{} ip netns exec ${u} \
                       ip link set ${u}b up

    echo "> inject route for loopback device into the new namespace (if needed)"
    ip netns exec ${u} \
    ip route list|grep 127.0.0.0/8|not \
        |xargs -r -i{} ip netns exec ${u} \
                       ip route add 127.0.0.0/8 dev lo

    echo "> inject default route into the new namespace (if needed)"
    ip netns exec ${u} \
    ip route list|grep default|not \
        |xargs -r -i{} ip netns exec ${u} \
                       ip route add default via ${g}

    echo "> inject route for the new network into default namespace (if needed)"
    ip route list|grep ${n}|grep br0|not \
        |xargs -r -i{} ip route add ${n} dev br0
}


how(){
    echo "Usage: $0 <name for new namespace> <ip address for the device>"
    echo "Example: $0 ns1 10.2.11.11"
}


if [ -z "$1" ] || [ -z "$2" ]; then
    how; exit 1
else
    new $1 $2; exit 0
fi

# vim:ts=4:sw=4:et:
